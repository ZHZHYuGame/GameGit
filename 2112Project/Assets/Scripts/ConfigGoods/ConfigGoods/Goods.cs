
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg.ConfigGoods
{
/// <summary>
/// 物品
/// </summary>
public sealed partial class Goods : Luban.BeanBase
{
    public Goods(JSONNode _buf) 
    {
        { if(!_buf["goodsId"].IsNumber) { throw new SerializationException(); }  GoodsId = _buf["goodsId"]; }
        { if(!_buf["goodsName"].IsString) { throw new SerializationException(); }  GoodsName = _buf["goodsName"]; }
        { if(!_buf["goodsType"].IsNumber) { throw new SerializationException(); }  GoodsType = (ConfigGoods.GoodsType)_buf["goodsType"].AsInt; }
        { if(!_buf["quality"].IsNumber) { throw new SerializationException(); }  Quality = (ConfigGoods.EQuality)_buf["quality"].AsInt; }
        { if(!_buf["description"].IsString) { throw new SerializationException(); }  Description = _buf["description"]; }
        { if(!_buf["iconPath"].IsNumber) { throw new SerializationException(); }  IconPath = _buf["iconPath"]; }
        { if(!_buf["stackable"].IsBoolean) { throw new SerializationException(); }  Stackable = _buf["stackable"]; }
        { if(!_buf["buyPrice"].IsNumber) { throw new SerializationException(); }  BuyPrice = _buf["buyPrice"]; }
    }

    public static Goods DeserializeGoods(JSONNode _buf)
    {
        return new ConfigGoods.Goods(_buf);
    }

    /// <summary>
    /// ID
    /// </summary>
    public readonly int GoodsId;
    /// <summary>
    /// 名字
    /// </summary>
    public readonly string GoodsName;
    /// <summary>
    /// 物品类型<br/>1: 武器<br/>2: 防具<br/>3: 道具<br/>4: 坐骑
    /// </summary>
    public readonly ConfigGoods.GoodsType GoodsType;
    /// <summary>
    /// 品质<br/>1: 白<br/>2: 蓝<br/>3: 紫<br/>4: 红
    /// </summary>
    public readonly ConfigGoods.EQuality Quality;
    /// <summary>
    /// 描述
    /// </summary>
    public readonly string Description;
    /// <summary>
    /// 图片路径
    /// </summary>
    public readonly int IconPath;
    /// <summary>
    /// 是否堆叠
    /// </summary>
    public readonly bool Stackable;
    /// <summary>
    /// 购买价格
    /// </summary>
    public readonly int BuyPrice;
   
    public const int __ID__ = -1669269028;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "goodsId:" + GoodsId + ","
        + "goodsName:" + GoodsName + ","
        + "goodsType:" + GoodsType + ","
        + "quality:" + Quality + ","
        + "description:" + Description + ","
        + "iconPath:" + IconPath + ","
        + "stackable:" + Stackable + ","
        + "buyPrice:" + BuyPrice + ","
        + "}";
    }
}

}

