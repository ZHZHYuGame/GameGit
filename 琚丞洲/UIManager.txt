UIManager面试话术：
	首先要定义两个枚举，第一个枚举里面申明一些游戏中能用到UI面板的类型，后续如果还需要添加在枚举里面直接添加UI面板的类型即可，第二个枚举里面会申明Canvas分层的一个类型，游戏中所有面板不可能都会在一个Canvas下面，会有背景层，UI面板层，提示框层等（了解重绘可以说说重绘），和第一个UI面板类型一样，后续还需要添加什么类型的Canvas层直接在后面添加（如果了解设计原则中的开放封闭原则这里也可以谈谈开放封闭原则）即可，接下来会申明一个类，这个类会申明UI面板的字段,里面有id，名字，有个bool值，这个bool值是管控UI面板是否是长时间打开关闭的，然后就是UIManager会继承单列，定义下字段，有控制所有按钮的一个父节点，定义集合储存所有层级，需要金币数量可以申明一个金币的数量，再定义个集合，类型是刚刚上面申明的那个UI类型的类，用来接收从Json配置表读取出来的面板，进行遍历，调用添加UI面板的方法，使UI面板进行一个添加，会有一个字典，这个字典会储存所有UI面板的信息,键是int类型，还有个字典会储存打开过的面板，这个字典会储存需要持久的显示的一个面板，比如一些背包，商城界面会有持久打开的一个情况，接下俩会有两个栈，一个栈是UIBase的类型，主要作用是管控UI面板的一个打开关闭的优先级，打开一个面板时进行入栈，关闭面板时进行一个出栈，这就是在背包界面打开关闭UI面板有个优先级的概念，第二个栈是GameObject的类型，这个栈储存一些提示框，提示框游戏中肯定用的多，也不能随便打开随便关闭，所以就会有个栈来储存提示框，这个栈是个对象池（提前了解对象池）来进行一个生产，优化大量生成提示框的一个功能，下面会申明一个提示框的字段，还有一个进行刷新调用的委托，这大概就是一个字段的设计，写一个Awake，里面得调用注册所有面板的方法，这个方法会进行一个读取json文件，用上面的申明的集合进行一个接收，遍历一下把参数按照上面储存UI面板字典的类型传过去，进行一个添加字典，添加面板，Awake里面还有个跳转场景不删除现在的这个父级对象，可以进行个一直存在，接下来是一个打开面板，里面有两个foreach循环，上面不是有两个字典，一个储存所有面板的的字典，一个储存是可以长久打开的面板字典，将这两个字典进行依次遍历，遍历字典的Key，储存所有面板的字典循环结束会调用一个OpenUI的方法，把面板类型的item的id传过去，然后这个OpenUI的方法接收到类型会先在储存所有面板的字典里面进行个查找，查看这个字典里面是否有我要打开的这个面板，如果有就按照类型进行打开，没有则会调用加载方法，另一个循环结束会调用基类的一个方法，进行隐藏还是激活，下面就是刚刚说的那个注册所有面板的方法，他会调用下面一个LoadAllPanel方法，这个方法就是字典传过来的数据，进行一个字典添加，再下面是一个OpenOtherUI方法，这个方法有两个参数，一个是那个UI调用的这个方法，一个是要打开的那个UI面板，用途是从这个面板打开别的一个面板，首先是在储存所有面板的字典里查找有没有要打开的面板，有这个面板则会让面板进行入栈，再调用基类的隐藏方法进行隐藏，最后再调用要打开的那个面板，进行一个显示操作，接下来是更新字段类的bool值，true的话就是长久显示的面板，false则反之，然后是加载面板的方法，所有面板都放在一个指定文件夹下面，这方法就会根据路径进行一个查找加载，然后获取面板身上的UIBase，用上面储存所有面板的字典进行一个添加字典操作，下面是关闭UI的方法，和打开UI有相似的地方，根据传过来的类型进行个查找是否存在，如果存在则判断是隐藏还是关闭，关闭之后可以调用删除的方法，再判断一下栈内的长度，如果长度大于零，则会将栈内的下一个面板进行打开，后面有一个删除UI面板的方法，进行查找到就会进行一个删除。
	接下来是UIManager里控制文本提示框的方法，判断上面储存提示框的栈的长度是否为零，如果小于零则会调用加载的方法，跟面板一样都在一个文件夹下面，根据指定类型进行一个获取加载，然后将新加载的进行个入栈操作，然后获取栈内元素，获得元素身上的text组件进行个赋值，将位置也进行个赋值，然后将提示框进行一个传参，还会有一个鼠标移动到物体身上所需要显示的提示框，参数会有名字，描述，价格，品质等，新申明一个Canvas类型，当为空就代表这个Canvas层下面没有文本框，然后会根据指定路径进行加载提示框，并获取提示框的panel，下面有个方法是将按钮隐藏的方法，并更改下鼠标的位置，然后给提示框进行赋值，后面会有个打开单个按钮提示，参数跟上面那个方法一样。不为空的时候进行个加载，判断之前的Ui是需要隐藏还是激活，这里有一个代码控制按钮居中的方法，获取居中的类型，进行一个位置更改，之后就跟鼠标移动到物体身上需要显示提示框的逻辑相似，给提示框对应的数据进行一个赋值，还有个打开所有提示，跟上面提示框的方法一样，所以就是提示框封装了三个方法，分别是鼠标移动到物体身上所显示的提示框，打开单个按钮提示，打开所有提示，如果提示框还有需要别的功能也可以封装，（（数学算法有一定的了解，可以说括号里的话术）下面就是根据提示框的需求，封装了对应的方法，单个按钮居中，按钮归位）还有几个Ui层级关系对外调用的方法，例如把UI设置在最上层，进入游戏，退出游戏时场景的加载，设置金币的数量等等。

（UI面板数据如何收发的两个方式：进入游戏直接缓存，打开UI面板动态获取一下数据）																						